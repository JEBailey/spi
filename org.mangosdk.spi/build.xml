<?xml version="1.0"?>
<!--

Copyright 2008 TOPdesk, the Netherlands

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<project name="tests" default="all">
	<property name="release.dir" value="${basedir}/release" />
	<property name="bin.dir" value="${basedir}/bin" />
	<property name="src.dir" value="${basedir}/src" />
	
	<target name="all" depends="source,jar,both" description="Create all distributables"/>
	
	<target name="source" depends="prepareRelease" description="Create source archive">
		<zip basedir="${src.dir}" destfile="${zip.file}" />
	</target>
	
	<target name="jar" depends="compile,prepareRelease" description="Create jar file">
		<jar basedir="${bin.dir}" destfile="${jar.file}" manifest="${mf.file}" />
	</target>
	
	<target name="both" depends="compile,prepareRelease" description="Create a jar containing the source files">
		<jar destfile="${both.file}" manifest="${mf.file}">
			<fileset dir="${bin.dir}" />
			<fileset dir="${src.dir}" excludes="**/META-INF/**" />
		</jar>
	</target>
	
	<target name="compile" description="Compile">
		<mkdir dir="${bin.dir}" />
		<javac srcdir="${src.dir}" destdir="${bin.dir}" classpath="${src.dir}" compiler="modern" debug="true" source="1.6" encoding="UTF-8" target="1.6">
			<compilerarg value="-proc:none" />
		</javac>
		<copy todir="${bin.dir}/META-INF">
			<fileset dir="${src.dir}/META-INF" />
		</copy>
	</target>
		
	<target name="prepareRelease" depends="version,manifest">
		<mkdir dir="${release.dir}" />
	</target>
	
	<target name="version" depends="compile" description="Determine the implementation version number">
		<java classname="org.mangosdk.spi.processor.Version" classpath="${bin.dir}" outputproperty="version" />
		<echo>Version number: ${version}</echo>
		<!-- name of the jar file -->
		<property name="jar.file.name" value="spi-${version}.jar" />
		<!-- name of the source archive -->
		<property name="zip.file.name" value="spi-src-${version}.zip" />
		<!-- name of the jar file also containing the source -->
		<property name="both.file.name" value="spi-full-${version}.jar" />
		<property name="jar.file" value="${release.dir}/${jar.file.name}" />
		<property name="zip.file" value="${release.dir}/${zip.file.name}" />
		<property name="both.file" value="${release.dir}/${both.file.name}" />
		<property name="mf.file" value="${bin.dir}/META-INF/MANIFEST.MF" />
	</target>
	
	<target name="manifest" depends="version">
		<tstamp>
			<format property="TODAY" pattern="MMMM dd, yyyy" locale="en" />
		</tstamp>
		<manifest file="${mf.file}">
			<attribute name="Implementation-Title" value="ProviderFor annotation and processor" />
			<attribute name="Implementation-Version" value="${version} (${TODAY})" />
			<attribute name="Implementation-Vendor" value="mangosdk.org" />
		</manifest>
	</target>
	
	<target name="clean" description="Remove generated files">
		<delete dir="${bin.dir}" failonerror="false" />
		<delete dir="${release.dir}" failonerror="false" />
	</target>
	<property name="credentialsFile" value="google.properties" />

	<target name="-credentials">
		<available property="hasCredentialsFile" file="${credentialsFile}"/>
	</target>
	
	<target name="-checkCredentialsFile" depends="-credentials" unless="hasCredentialsFile">
		<echo file="${credentialsFile}">#username=[your google account name without @gmail.com]
#password=[your googlecode password, is NOT your gmail password]</echo>
		<fail message="fill in ${credentialsFile} to provide your credentials"/>
	</target>
	
	<target name="publish" description="Publishes the latest build to googlecode" depends="-checkCredentialsFile, all">
		<taskdef classname="net.bluecow.googlecode.ant.GoogleCodeUploadTask" classpath="deps/ant-googlecode-0.0.2.jar" name="gcupload"/>
		<property file="${credentialsFile}" prefix="google" />
		<gcupload 
		        username="${google.username}"
		        password="${google.password}" 
		        projectname="spi" 
		        filename="${both.file}" 
		        targetfilename="${both.file.name}"
		        summary="Version ${version}: The ProviderFor annotation and its processor"
		        labels="Type-Executable, OpSys-All"
				verbose="true" />
		<gcupload 
		        username="${google.username}"
		        password="${google.password}" 
		        projectname="spi" 
		        filename="${both.file}" 
		        targetfilename="spi.jar"
		        summary="Version ${version}: The ProviderFor annotation and its processor"
		        labels="Recommended, Recommended-True, Type-Executable, OpSys-All, Featured, Featured-True"
				verbose="true" />
		<gcupload 
		        username="${google.username}"
		        password="${google.password}" 
		        projectname="spi" 
		        filename="${jar.file}" 
		        targetfilename="${jar.file.name}"
		        summary="Version ${version}: The ProviderFor annotation and its processor, including source files"
		        labels="Type-Executable-Docs, OpSys-All"
				verbose="true" />
		<gcupload 
		        username="${google.username}"
		        password="${google.password}" 
		        projectname="spi" 
		        filename="${jar.file}" 
		        targetfilename="spi-full.jar"
		        summary="Version ${version}: The ProviderFor annotation and its processor, including source files"
		        labels="Type-Executable-Docs, OpSys-All, Featured, Featured-True"
				verbose="true" />	
		<gcupload 
		        username="${google.username}"
		        password="${google.password}" 
		        projectname="spi" 
		        filename="${zip.file}" 
		        targetfilename="${zip.file.name}"
		        summary="Version ${version}: Source code for the ProviderFor annotation and its processor"
		        labels="Type-Docs, OpSys-All"
				verbose="true" />
		<gcupload 
		        username="${google.username}"
		        password="${google.password}" 
		        projectname="spi" 
		        filename="${zip.file}" 
		        targetfilename="spi-src.zip"
		        summary="Version ${version}: Source code for the ProviderFor annotation and its processor"
		        labels="Type-Docs, OpSys-All, Featured, Featured-True"
				verbose="true" />	
	</target>
	
</project>
